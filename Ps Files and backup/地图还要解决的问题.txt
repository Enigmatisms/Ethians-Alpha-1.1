因为：1.getActiveRange的范围不包括玩家所在中心的九格，在返回路径第二格self.path[-2]时,不会出错（如果在中心9格之内的话，返回	的其实就是原位置，没有必要浪费一次计算）
4.pathfinder优化思考，是否应该玩家在自己的周围计算cost（而不是每个怪物寻路，因为每次寻路只需要一步就行，感觉资源浪费）。

游戏需要一个原则：
同名的装备属性一定相同，如果某件装备的名字改变了，则装备属性一定改变

===================总体任务============================
标准表达式：xxx物品，成色xxx，能够给予敌人伤害（限制你的攻击能力），增强你的防御（使你的弱点暴露），增强你的元气（使你的精神力量受到削弱），使你感觉身轻如燕（令你感觉步履沉重）。可以造成（吸血（Vampire），燃烧（Burning），中毒（Poisoning），击退（Knockback），眩晕（Dizzy），冰冻（Frozen），破甲（Vulnerable），逃跑（Fleeing），倒戈（Defection），诅咒（Cursed（敌方魔法降低），被动：光明（Luminous），诡计（tricky（减小受伤几率）），失明（blind（对自身）），，隐匿（Invisible（不容易被敌方发现（与getActiveRange有关））），聒噪（Noisy（更容易被敌方发现）），缠身（huanted（无法脱下，售卖，丢弃这个物品（永远在身上）），尊敬（Esteemed（NPC价格降低）））这些被称为Attributes.

23.关于前缀：初步的想法是：
	0级，1级，物品可以加护5次， 2级4次， 3级3次， 4级2次， 5级1次，6级不可加护
	也就是说，物品等级为6级为顶级，而开始时成色较差的物品无论如何也无法加护到顶级
	0级一个词缀，1级一个词缀，2级（1-2）词缀，3级及以上（2-3）个词缀，5级（2-3）个，6级没有词缀（名称改变）
	每次升级之后获得的属性都是随机的（加护卷轴作用于武器之后，武器会升级，升级之后词缀全部发生改变）
	有可能升级之前是三词缀，而且三个词缀都对那个武器很有利，升级之后变成两词缀并且词缀不好
	加护卷轴500g，退魔卷轴（降级（1级时不降）500g），降级时原有的词缀也会改变！所以不要轻易附魔和退魔。
	选择：（注意我们有个属性叫做附魔等级，天然物品(除了0级物品)（掉落和商人生成），附魔等级都为0，但是附魔等级+物品等级<=10时可以附魔，0级物品的附魔等级为1（if 等级==0，附魔等级=1）（除了一开始的0级物品之外，其他物品的附魔等级总是等于物品等级）。每个词缀对应了一种增强方式（在dict里保存），每次升级时要把之前词缀的属性去掉，再加上之后词缀的属性。降级时直接去掉之前的属性，再随机生成低一级的词缀属性并加上。都是概率生成，生成的词缀不重复。
24.建立装备掉落概率系统（又是一个建模问题，选择好的概率模型）（7，8明后两天）
物品生成等级：0级是可以在任何生物内生成，1级只能在等级<=1级的生物以及地牢地面，宝箱内自然生成，2级只能在等级<=2级的生物以及地牢地面，宝箱内自然生成，3级只能在3级生物和宝箱内生成，4级只能在四级生物和冰霜宝箱内生成，5级只能在生物内生成，6级为任务物品，只能由特定方式得到。
26.怪物攻击特性（远程，召唤，传送，吸血，自疗，眩晕，法术）（22，23，26三天）
"""stat参数解释：怪物的状态参数
        >>stat=0，怪物和玩家都无法互相检测，不绘制这样的怪物
        >>stat=1，怪物发现玩家，开始追踪，但还没有开始攻击
        >>stat=2，怪物攻击玩家
        >>stat=3，怪物血量过低，开始逃跑
        >>stat=4，怪物眩晕了         怪物debuff
        >>stat=5,   怪物使用特殊技能：传送         怪物逃跑的另一方式
        >>stat=6,   怪物使用特殊技能：召唤
        >>stat=7,   怪物使用特殊技能：自疗
        >>stat=8,   远程攻击
        """

''intelligence值有八等，0>>>，不会逃跑
        1>>>生命过低逃跑
        2>>>开始时逃跑，受到攻击时反击
        3>>>生命过低时传送
        4>>>生命过低时自疗
        5>>>有召唤能力
        6>>>远程攻击能力
        7>>>远程攻击+召唤
        8>>>boss
        '''

4.怪物能力：绿色和蓝色史莱姆可以分裂	(mob&monster)
5.确定键的能力（Enter：比如站在门里关门）(ply & cursor)
6.局部刷新


27.跟班。（尝试建立你的小跟班）（28，29两天）
28.修改伤害模型，法术系统完善。（30,31）
30.显示信息完善：对应于其智力进行描述，并且描述当前怪物是否友好，是否有debuff
物品是否装备（直观一点）

30.完善附魔系统：lvl6。（1-2-3）
31.游戏内信息显示优化（4）小地图（4）
30.建立死亡信息显示：一个专门的类：当触发生命值小于等于0时会返回值给这个类，由此记录玩家的死因( 4 )
30.其他游戏功能建立：( 5-6 )
	1.升级点数增加
	2.简单的任务系统
	3.游戏内信息显示优化
	4.统计和分数系统
	5.职业选择
	6.彩蛋大厅
31.游戏GUI：（5-6-7）
	1.游戏加载动画
	2.主菜单
	3.设置界面
	4.死亡信息和统计
	5.英雄纪念厅
29.排序算法:用什么方法来给装备排序？（首先肯定是已装备（参数）在前）


可能进行的优化：
1.想到一个mob的优化办法：用dict的key储存位置，value储存实例（可能不太好，还需思考）
2.迷宫生成算法优化
3.迷雾算法的基于FOV的阴影投射算法:
	远程攻击在攻击范围内若有障碍物如何进攻？这个问题和除雾算法有关，一般来说，只要是可以除去雾的地方，都可以攻击
4.速度优化和结构清晰度优化：比如list可以部分被set替换


（以上是4月内容）

（五月开始必须着手装备系统的建立，着重要求：）
1.装备与playerAttr的联系
2.装备掉落在地上的显示
3.怪物装备掉落率公式
4.ply与装备系统的互动（拾取丢弃）
5.个人装备库（可以嵌入playerAttr内）
6.保存系统（能够储存数据）

想到一个[64*42]矩阵遍历的优化办法，不知是否可行：
	for内外循环只进行一般，但是处理点时，从头和尾部双向进行。

前缀：1
中性：（成色一般）（Normal）
-1：无前缀（成色一般）（Normal）
0 平庸的（Ordinary）：取最高的加至最低的

贬义：（成色很差-成色较差）（Inferior）0
1 破碎的（Broken）：最差
2 生锈的（Rusty）：攻击减小
3 脆弱的（Fragile）：防御减小
4 无知的（Ignorant）：魔法减小
5 迟钝的（Blunt）：速度减小
6 昂贵的（Expensive）：价格翻倍
7 沉重的（Heavy）：重量增加



较好的：（成色优良）（Good）2
8 锋利的（Sharp）	攻击加强I
9 坚固的（Hard）	防御加强I
10 闪烁的（Shining）   魔法加强I
11 轻盈的（Light）   速度加强I
12 致命的（Fatal）攻击加强II
13 护卫的（Defensive）防御加强II
14 魔幻的（Magical）魔法加强II
15 快速的（Rapid）速度加强II
16 斗士的（Fighter’s）攻击加强III
17 守卫的（Guardians‘s）防御加强III
18 术士的（Wizard’s）魔法加强III
19 忍者的（Ninja‘s）速度增强III
20 多彩的（Colorful）多重属性I
21 普世的（Universal）多重属性II

很好：（Excellent）3
22 剔骨的（Eviscerate）攻击加强IV
23 磐石的（Rocky）防御加强IV
24 神秘的（Mysterious）魔法加强IV
25 蜘蛛的（Spider）速度加强IV
26 饱和的（Saturated）多重属性III
27 神赐的（Gifted）多重属性III
28 神圣的（Divine）多重属性III

后期：（Epic）4
29 狂暴的（Berserk）攻击增强V
30 不死的（Undead）防御增强V
31 精神的（Spiritual）魔法增强V
32 疾风的（Windy）速度增强V
33 领主的（Dominated）多重属性IV
34 全面的（Pervasive）多重属性IV

末期：（End）5-
35 暴风的（Storm）多重属性V
36 火山的（Volcano）多重属性V
37 梦幻的（Unexisted）多重属性V
